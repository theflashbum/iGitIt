<?xml version="1.0"?>
<project name="compile-air" basedir="." default="local-run">

    <target name="clean-bin">
        <!-- Remove all directories created during the build process -->
        <if>
            <available type="dir" file="${bin.loc}"/>
            <then>
                <delete includeemptydirs="true" failonerror="false">
                    <fileset dir="${bin.loc}" defaultexcludes="false">
                        <include name="**/*"/>
                    </fileset>
                </delete>
            </then>
            <else>
                <mkdir dir="${bin.loc}"/>
            </else>
        </if>
    </target>

    <target name="clean-css">
        <if>
            <available type="dir" file="${bin.loc}/css"/>
            <then>
                <replaceregexp flags="g">
                    <regexp pattern="\s*([@{}:;,]|\)\s|\s\()\s*|\s*\/\*([^*\\\\]|\*(?!\/))+\*\/\s*|[\n\r\t]" />
                    <substitution expression="\1" />
                    <fileset dir="${bin.loc}/css">
                        <include name="*.css" />
                    </fileset>
                </replaceregexp>
            </then>
        </if>
    </target>

    <target name="setup-bin" depends="clean-bin">
        <sync todir="${bin.loc}">
            <fileset dir="${basedir}/build/bin-resources"/>
        </sync>

        <copy file="${basedir}/build/air-resources/template-air-app.xml"
              tofile="${bin.loc}/${project.name}-air-app.xml"/>

          <replace file="${bin.loc}/${project.name}-air-app.xml" propertyFile="${basedir}/build/air-resources/air.properties">
            <!--<replacefilter token="@width@" property="width"/>-->
            <!--<replacefilter token="@height@" property="height"/>-->
            <replacefilter token="@project@" value="${project.name.versioned}"/>
            <replacefilter token="@package@" value="${app.package}"/>
            <replacefilter token="@version@" value="1"/>
            <replacefilter token="@projectversion@" value="${project.name.versioned}"/>
        </replace>
        <if>
            <istrue value="${csstidy}" />
            <then>
                <runtarget target="clean-css" />
            </then>
        </if>
    </target>


    <!-- Compile Release SWF -->
    <target name="compile" depends="setup-bin">
        <echo>[compile] Compiling SWF</echo>
        <echo>[compile] Using Flex SDK at: ${FLEX_HOME}</echo>

        <if>
            <equals arg1="debug" arg2="${compile.type}" casesensitive="false"/>
            <then>
                <property name="debug.flag" value="true"/>
                <property name="optimize.flag" value="false"/>
                <property name="mode.name" value="Debug"/>
            </then>
            <elseif>
                <equals arg1="optimize" arg2="${compile.type}" casesensitive="false"/>
                <then>
                    <property name="debug.flag" value="false"/>
                    <property name="optimize.flag" value="true"/>
                    <property name="mode.name" value="Optimized"/>
                </then>
            </elseif>
        </if>

        <java jar="${FLEX_HOME}/lib/mxmlc.jar" dir="${FLEX_HOME}/frameworks" fork="true" failonerror="true">
            <arg value="+configname=air"/>
            <arg value="${main.src.loc}/${project.name}.as"/>
            <arg value="-source-path=${main.src.loc}"/>

            <arg value="-output=${bin.loc}/swfs/${project.name.versioned}.swf"/>
            <arg value="-static-link-runtime-shared-libraries=true"/>
            <!--Compile mode debug vs. optimize-->
            <arg value="-debug=${debug.flag}"/>
            <arg value="-optimize=${optimize.flag}"/>
            <!-- Include classes from SWCs in this folder, but only the ones we use. -->
            <arg value="-library-path+=${lib.loc}"/>
            <arg value="-library-path+=${air.swcs}"/>
            <arg value="-incremental=true"/>
            <arg value="-verbose-stacktraces=true"/>
            <arg value="-headless-server=true"/>
            <arg value="-use-network=false"/>
            <!--<arg value="-default-frame-rate=31"/>-->
            <!--<arg value="-define=CONFIG::mobile,${mobile}"/>-->
        </java>

        <echo>[compile] ${mode.name} SWF ${project.name.versioned}.swf created successfully</echo>
    </target>

    <target name="local-run" depends="compile">
        <echo message="${os.name}"/>
        <if>
            <equals arg1="${os.name}" arg2="Mac OS X"/>
            <then>
                <exec executable="${FLEX_HOME}/bin/adl" spawn="false">
                    <arg line="${bin.loc}/${project.name}-air-app.xml"/>
                </exec>
            </then>
            <else>
                <exec executable="${FLEX_HOME}/bin/adl.exe" spawn="false">
                    <arg line="${bin.loc}/${project.name}-air-app.xml"/>
                </exec>
            </else>
        </if>
    </target>

</project>
